#!/bin/bash
#
# Convert route and stop data from GTFS csv-files to gpx tracks and waypoints.
#
# Usage:
#   gtfs2gpx <route_short_name>
#
# This script must be run on a directory which contains unpacked GTFS data.
# Produces files with names like <route_short_name>_<shape_id>.gpx for route
# shape (gpx track) and <route_short_name>_<shape_id>_stops.gpx for stop
# positions (gpx waypoints).
#
# Requires:
#   gpsbabel (https://www.gpsbabel.org/ Debian: gpsbabel)
#   csvtool (https://github.com/Chris00/ocaml-csv Debian: csvtool)
# Needs bash for PIPESTATUS
#
# Note: csvtool on Debian fails on files with unicode byte order mark (BOM).
# Use bomstrip or similar to fix the .txt files in this case.

# die $EXITCODE $MESSAGE
# Print a message and exit with a given exit code.
die ()
{
    echo "$2" >&2
    exit $1
}

ROUTE=$1

echo "Finding route $ROUTE"

RID=$(csvtool namedcol route_short_name,route_id routes.txt \
    | grep "^${ROUTE}," | cut -d ',' -f2 ; exit ${PIPESTATUS[1]})
test $? -eq 0 || die 1 "Route short name not found in routes.txt"
echo "route_id = $RID"

SHAPES=$(csvtool namedcol route_id,shape_id trips.txt \
    | grep "^${RID}," | cut -d',' -f2 | sort -u ; exit ${PIPESTATUS[1]})
test $? -eq 0 || die 1 "route_id not found in trips.txt"
echo "shapes = $SHAPES"

echo "Writing to GPX files..."
IFS=$'\n'
for SS in $SHAPES ; do
    OUTNAME="${ROUTE}_${SS}"
    csvtool namedcol shape_id,shape_pt_lat,shape_pt_lon shapes.txt \
        | grep "^${SS}," | cut -d',' -f2,3 \
        | gpsbabel -t -i unicsv,fields=lat+lon -f - -o gpx -F "${OUTNAME}.gpx"
    echo "${OUTNAME}.gpx"
    TRIPID=$(csvtool namedcol route_id,shape_id,trip_id trips.txt \
        | grep "^${RID},${SS}," | head -1 | cut -d',' -f3)
    test -n "$TRIPID" || die 1 "No trip_id found in trips.txt"
    #echo "Getting stops for trip_id = $TRIPID"
    STOPIDS=$(csvtool namedcol trip_id,stop_id stop_times.txt \
        | grep "^${TRIPID}," | cut -d',' -f2 ; exit ${PIPESTATUS[1]})
    test $? -eq 0 || die 1 "trip_id not found in stop_times.txt"
    TFILE=$(tempfile)
    for STOP in $STOPIDS ; do
        csvtool namedcol stop_id,stop_code,stop_name,stop_lat,stop_lon stops.txt\
            | grep "^${STOP}," >> "$TFILE"
        test $? -eq 0 || die 1 "stop_id $STOP not found in stops.txt"
    done
    cat "$TFILE" | cut -d',' -f2,3,4,5 | tr -d '"' \
        | gpsbabel -w -i unicsv,fields=name+desc+lat+lon -f - \
            -o gpx -F "${OUTNAME}_stops.gpx"
    echo "${OUTNAME}_stops.gpx"
    rm -f "$TFILE"
done
